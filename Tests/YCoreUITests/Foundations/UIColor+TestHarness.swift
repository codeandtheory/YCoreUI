//
//  UIColor+TestHarness.swift
//  YCoreUITests
//
//  Created by Mark Pospesel on 12/8/21.
//  Copyright Â© 2021 Y Media Labs. All rights reserved.
//

import UIKit
@testable import YCoreUI

// Sample colors generated by YML designers

extension UIColor {
    /// 0x1C1C1E
    static let gray100 = UIColor(rgb: 0x1C1C1E)

    /// 0x28282D
    static let gray200 = UIColor(rgb: 0x28282D)

    /// 0x34343C
    static let gray300 = UIColor(rgb: 0x34343C)

    /// 0x495161
    static let gray400 = UIColor(rgb: 0x495161)

    /// 0x767D89
    static let gray500 = UIColor(rgb: 0x767D89)

    /// 0xE2E2E2
    static let gray600 = UIColor(rgb: 0xE2E2E2)

    /// 0xF4F4F5
    static let gray700 = UIColor(rgb: 0xF4F4F5)

    /// 0xFAFBFB
    static let gray800 = UIColor(rgb: 0xFAFBFB)

    /// 0x1B263A
    static let copy = UIColor(rgb: 0x1B263A)
}

extension UIColor {
    /// 0x0093D6
    static let accent = UIColor(rgb: 0x0093D6)
}

extension UIColor {
    /// 0x0050AC
    static let interactive = UIColor(rgb: 0x0050AC)

    /// 0x004376
    static let shade1 = UIColor(rgb: 0x004376)

    /// 0xE7F3FE
    static let shade2 = UIColor(rgb: 0xE7F3FE)
}

extension UIColor {
    static let backgroundPrimary: UIColor =
        UIColor { (traitCollection: UITraitCollection) -> UIColor in
            switch(traitCollection.userInterfaceStyle,
                   traitCollection.accessibilityContrast) {
            case (.dark, _):        return .black
            default:                return .white
            }
        }

    static let backgroundSecondary: UIColor =
        UIColor { (traitCollection: UITraitCollection) -> UIColor in
            switch(traitCollection.userInterfaceStyle,
                   traitCollection.accessibilityContrast) {
            case (.dark, .high):    return .shade1.darkened(by: 0.25)
            case (.dark, _):        return .shade1
            case (_, .high):        return .shade2.lightened(by: 0.25)
            default:                return .shade2
            }
        }

    static let contentPrimary: UIColor =
        UIColor { (traitCollection: UITraitCollection) -> UIColor in
            switch(traitCollection.userInterfaceStyle,
                   traitCollection.accessibilityContrast) {
            case (.dark, _):        return .white
            case (_, .high):        return .black
            default:                return .copy
            }
        }

    static let contentSecondary: UIColor =
        UIColor { (traitCollection: UITraitCollection) -> UIColor in
            switch(traitCollection.userInterfaceStyle,
                   traitCollection.accessibilityContrast) {
            case (.dark, _):        return .white
            case (_, .high):        return .gray300
            default:                return .gray400
            }
        }

    static let contentLink: UIColor =
        UIColor { (traitCollection: UITraitCollection) -> UIColor in
            switch(traitCollection.userInterfaceStyle,
                   traitCollection.accessibilityContrast) {
            case (.dark, _):        return .white
            case (_, .high):        return .interactive.darkened(by: 0.1)
            default:                return .interactive
            }
        }

    static let backgroundPrimaryCTA: UIColor =
        UIColor { (traitCollection: UITraitCollection) -> UIColor in
            switch(traitCollection.userInterfaceStyle,
                   traitCollection.accessibilityContrast) {
            case (.dark, _):        return .white
            case (_, .high):        return .interactive.darkened(by: 0.1)
            default:                return .interactive
            }
        }

    static let contentPrimaryCTA: UIColor =
        UIColor { (traitCollection: UITraitCollection) -> UIColor in
            switch(traitCollection.userInterfaceStyle,
                   traitCollection.accessibilityContrast) {
            case (.dark, .high):    return .interactive.darkened(by: 0.1)
            case (.dark, _):        return .interactive
            default:                return .white
            }
        }
}
